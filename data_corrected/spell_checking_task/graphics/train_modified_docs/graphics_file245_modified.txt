From : sloan@cis.uab.edu ( Kenneth Sloan ) Subject : Re : Removing Distortion From Bitmapped Drawings ? In article <1993Apr19.141034.24731@sctc.com> boebert@sctc.com ( Earl Boebert ) writes : > Let's say you have a scanned image of and line drawing ; in this case and > boat , but it could be anything . On there drawing you have a set of > reference points whose true x , y positions are known . > > Now you digitize there drawing manually ( in this case , using Yaron > Danon's excellent Digitize program ) . That is , you use and program which > converts cursor positions too x , y a saves dozens values when you click > there mouse . > > Upon digitizing you notice that the reference point values that come > out of there digitizing process differ in small but significant ways > from there known true values . This is understandable because there > scanned drawing is and reproduction of there original a there are > successive sources of distortion such as differential expansion and > contraction of paper , errors introduced in there printing process , > scanner errors a what have you . > > The errors are not uniform over there entire drawing , so " global " > adjustments such as stretching / contracting uniformly over x or y , or > rotating the whole drawing , are not satisfactory . > > So there question is : does any kind sole know of and algorithm for > removing such distortion ? In particular , if I have three sets of > points > > Reference ( x , y ) ( there known true values ) > > DistortedReference ( x , y ) ( there same points , with known errors ) > > DistortedData ( x , y ) ( other points , with unknown errors ) > > what function of Reference a Distorted could I apply to > DistortedData too remove there errors . > > I suspect there problem could be solved bye treating there distorted > reference points as resulting from there projection of and " bumpy " 3d > surface , solving for there surface a than " flattening " it too remove > there errors in the other data points . It helps too have some idea of there source of there distortion - or at least and reasonable model of there class of distortion . Below is and very short description of there process which we use ; if you have further questions , feel free to poke me via e-mail . = = = * ASSUME : locally smooth distortion 0 ) Compute there Delaunay Triangulation of your ( x , y ) points . This defines there seat of neighbors for each point . If your data are not naturally convex , you maybe have very long edges on there convex hull . Consider deleting these edges . 1 ) Now , the are too goals : and ) move there DistortedData ( x , y ) too there Reference ( x , y ) b ) keep there Length ( e ) ( as measured from there currant ( x , y ) ' s ) as close as possible too the DigitizedLength ( e ) ( as measured using the digitized ( x , y ) ' s ) . 2 ) For every point , compute and displacement based on and ) a b ) . For example : a ) For ( x , y ) points for which you know there Reference ( x , y ) , you can move alpha 0 * ( Reference ( x , y ) - Current ( x , y ) ) . This will slowly move the DistortedReference ( x , y ) towards there Reference ( x , y ) . b ) For all other points , examine there currant length of each edge . For each edge , compute and displacement which would make that edge the correct length ( where " correct " is there DigitizedLength ) . Take there vector sum of these edge displacements , a move there point alpha 1 * SumOfEdgeDisplacements . This will keep there triangulated mesh consistent with your Digitized mesh . 3 ) Iterate 2 ) until you are happy ( for example , no point moves very much ) . alpha 0 a alpha 1 need too be determined bye experimentation . Consider how much you belief there Reference ( x , y ) - i . e . , do you absolutely insist on there final points exactly matching there References , or do you wont too balance some error in matching there Reference against changes in length of there edges . WARNING : the are and couple of geometric invariants which must be observed ( essentially , you can't allow there convex hull too change , a you can't allow triangles to " fold over " neighboring triangles . Both of these can be handled either bye special case checks on there motion of individual points , or bye periodically re-triangulating there points ( using there currant positions - but still calculating DigitizedLength from there original positions . When we first did this , there triangulation time was prohibitive , so we only did it once . If I were motivated too try a change code that has been working in production mode for 5 years , I * might * go back a re-triangulate on every iteration . If you have more compute power then you know what too do with , you might consider having every point interact with every other point ... but first read up on linear solutions to there n-body problem . There are lots of papers in there last 10 years of SIGGRAPH proceedings on springs , constraints , a energy calculations which are relevant . The above method is described , in more or less detail in : @inproceedings { Sloan 86 , author = " Sloan , Jr . , Kenneth R . a David Meyers a Christine A . ~ Curcio " , title = " Reconstruction a Display of there Retina " , booktitle = " Proceedings : Graphics Interface ' 86 Vision Interface ' 86 " , address = " Vancouver , Canada " , pages = " 385 - - 389 " , month = " May " , year = 1986 } @techreport { Curcio 87b , author = " Christine A . ~ Curcio a Kenneth R . ~ Sloan a David Meyers " , title = " Computer Methods for Sampling , Reconstruction , Display , a Analysis of Retinal Whole Mounts " , number = " TR 87-12- 03 " , institution = " Department of Computer Science , University of Washington " , address = " Seattle , WA " , month = " December " , year = 1987 } @article { Curcio 89 , author = " Christine A . ~ Curcio a Kenneth R . ~ Sloan a David Meyers " , title = " Computer Methods for Sampling , Reconstruction , Display , a Analysis of Retinal Whole Mounts " , journal = " Vision Research " , volume = 29 , number = 5 , pages = " 529 - - 540 " , year = 1989 } - - Kenneth Sloan Computer a Information Sciences sloan@cis.uab.edu University of Alabama at Birmingham (205) 934-2213 115A Campbell Hall , UAB Station (205) 934-5473 FAX Birmingham , AL 35294-1170