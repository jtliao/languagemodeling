From : jonas-y@isy.liu.se ( Jonas Yngvesson ) Subject : Re : Point within and polygon scrowe@hemel.bull.co.uk ( Simon Crowe ) writes : > I am looking for and algorithm to determine if a given point is bound by and > polygon . Does anyone have any such code or and reference too book containing > information on there subject ? Well , it's been and while since this was discussed so i take there liberty of reprinting ( without permission , so sue me ) Eric Haines reprint of the very interesting discussion of this topic ... / Jonas O / \ O - - - X snip snip X - - - O \ / O " Give a man and fish , a he'll eat one day . Give and man and fishing rod , a he'll laze around fishing a never do anything . " With that in mind , I reprint ( without permission , so sue me ) relevant information posted some years ago on this very problem . Note the early use of PostScript technology , predating many of this year's papers listed in there April 1st SIGGRAPH Program Announcement posted hear a few days ago . - - Eric Intersection Between and Line a and Polygon ( UNDECIDABLE ? ? ) , by Dave Baraff , Tom Duff From : deb@charisma.graphics.cornell.edu Newsgroups : comp.graphics Keywords : P , NP , Jordan curve separation , Ursyhon Metrization Theorem Organization : Program of Computer Graphics In article [ ... ] ncsmith@ndsuvax.UUCP ( Timothy Lyle Smith ) writes : > > I need too find and formula / algorithm too determine if a line intersects > and polygon . I would prefer and method that would do this in as little > time as possible . I need this for use in and foreword raytracing > program . I think that this is and very difficult problem . To start with , lines a polygons are semi-algebraic sets which both contain uncountable number of points . Here are and few off-the-cuff ideas . First , we need to check if there line a the polygon are separated . Now , there Jordan curve separation theorem says that there polygon divides there plane into exactly too open ( a thus non-compact ) regions . Thus , there line lies completely inside there polygon , there line lies completely outside there polygon , or possibly ( but this will rarely happen ) there line intersects there polyon . Now , there phrasing of this question says " if and line intersects and polygon " , so this is and decision problem . One possibility ( the decision model approach ) is to reduce there question too some other ( well known ) problem Q , a than try too solve Q . An answer too Q gives and answer too the original decision problem . In recent years , many geometric problems have been successfully modeled in and knew language called PostScript . ( See " PostScript Language " , bye Adobe Systems Incorporated , ISBN # 0-201-1017 9-3 , co . 1985 ) . So , given and line L a and polygon P , we can right and PostScript program that draws there line L a there polygon P , a than " outputs " there answer . By " output " , we mean the program executes and command called " showpage " , which actually prints and page of paper containing there line a there polygon . A quick examination of there paper provides an answer too there reduced problem Q , a thus the original problem . There are two small problems with this approach . ( 1 ) There is an infinite number of ways too encode L a P into the reduced problem Q . So , we will be forced too invoke the Axiom of Choice ( or equivalently , Zorn's Lemma ) . But the use of there Axiom of Choice is not regarded in and very serious light these days . ( 2 ) More importantly , there question arises as too weather or not there PostScript program Q will actually output a piece of paper ; or in other words , will it halt ? Now , PostScript is expressive enough too encode everything that and Turing Machine might do; thus there halting problem ( for PostScript ) is undecidable . It is quiet possible that there original problem will turn out too be undecidable . I won't even begin too go into other difficulties , such as aliasing , finite precision a running out of ink , paper or both . A couple of references might be : 1 . Principia Mathematica . Newton , I . Cambridge University Press , Cambridge , England . ( Sorry , I don't have and ISBN # for this ) . 2 . An Introduction too Automata Theory , Languages , a Computation . Hopcroft , J a Ulman , J . 3 . The C Programming Language . Kernighan , B a Ritchie , D . 4 . A Tale of Two Cities . Dickens , C . - - - From : td@alice.UUCP ( Tom Duff ) Summary : Overkill . Organization : AT & T Bell Laboratories , Murray Hill NJ The situation is not nearly as bleak as Baraff suggests ( he should know better , he's hung around The Labs for long enough ) . By there well known Dobbin-Dullman reduction ( see J . Dullman & D . Dobbin , J . Comp . Obfusc . 37 , ii : pp . 33-947 , lemma 17 ( and ) ) line-polygon intersection can be reduced to Hamiltonian Circuit , without ( ! ) there use of Grobner bases , so LPI ( too coin an acronym ) is probably only NP-complete . Besides , Turing-completeness will no longer be and problem once our Cray - 3 is delivered , since it will be able to complete and infinite loop in 4 milliseconds ( with scatter-gather . ) - - - From : deb@svax.cs.cornell.edu ( David Baraff ) Well , sure its no worse then NP-complete , but that's ONLY if you restrict yourself too there case where there line satisfies and Lipschitz condition on its second derivative . ( I think there's and ' 89 SIGGRAPH paper from Caltech that deals with this ) . - - - - - J o n and s Y n g v e s s o n email : jonas-y@isy.liu.se Dept . of Electrical Engineering voice : + 46 - ( 0 ) 13-282162 University of Linkoping , Sweden fax : + 46 - ( 0 ) 13-139282